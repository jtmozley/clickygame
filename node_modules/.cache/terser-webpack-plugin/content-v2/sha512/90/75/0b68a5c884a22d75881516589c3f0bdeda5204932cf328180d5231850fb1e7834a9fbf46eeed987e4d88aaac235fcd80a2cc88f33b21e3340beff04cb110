{"map":"{\"version\":3,\"sources\":[\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/components/topbar/index.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/components/jumbotron/index.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/components/cardcontainer/index.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/components/imagecard/index.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/components/footer/index.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/App.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/serviceWorker.js\",\"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/index.js\"],\"names\":[\"Nav\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"message\",\"score\",\"topScore\",\"Jumbotron\",\"Container\",\"children\",\"Card\",\"onClick\",\"findFriend\",\"id\",\"src\",\"image\",\"alt\",\"Footer\",\"href\",\"target\",\"rel\",\"App\",\"state\",\"friends\",\"selectedImages\",\"msg\",\"idCheck\",\"_this\",\"find\",\"myId\",\"push\",\"shuffleImages\",\"setState\",\"setTimeout\",\"array\",\"i\",\"length\",\"j\",\"Math\",\"floor\",\"random\",\"_ref\",\"_this2\",\"this\",\"map\",\"friend\",\"key\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport './style.css';\\n\\nexport default function Nav(props) {\\n  return (\\n    <div className=\\\"bar fixed-top\\\">\\n      <div className=\\\"row\\\">\\n        <div className=\\\"col-sm text-center item\\\">Clicky Game</div>\\n        <div className=\\\"col-sm text-center item message\\\">{props.message}</div>\\n        <div className=\\\"col-sm text-center item\\\">Score: {props.score} | Top Score: {props.topScore}</div>\\n      </div>\\n    </div>\\n  );\\n}\\n\",\"import React from \\\"react\\\";\\nimport \\\"./style.css\\\";\\n\\nexport default function Jumbotron() {\\n  return (\\n    <div className=\\\"jumbotron jumbotron-fluid\\\">\\n      <div className=\\\"container\\\">\\n        <p className=\\\"lead text-center\\\">\\n          If you click an image more than once the game will start over and the\\n          score will be reset to zero\\n        </p>\\n      </div>\\n    </div>\\n  );\\n}\\n\",\"import React from 'react'\\nimport './style.css'\\n\\nexport default function Container(props){\\n    return (\\n        <div className=\\\"container\\\">\\n            <div className=\\\"row justify-content-center\\\">{props.children}</div>\\n        </div>\\n    )\\n}\",\"import React from \\\"react\\\";\\nimport \\\"./style.css\\\";\\n\\nexport default function Card(props) {\\n  return (\\n    <img\\n      onClick={() => props.findFriend(props.id)}\\n      className=\\\"image col-md\\\"\\n      src={props.image}\\n      alt={props.id}\\n    />\\n  );\\n}\\n\",\"import React from \\\"react\\\";\\nimport \\\"./style.css\\\";\\n\\nexport default function Footer() {\\n  return (\\n    <div className=\\\"footer\\\">\\n      <i className=\\\"fab fa-react\\\" />\\n      <i className=\\\"fab fa-bootstrap\\\" />\\n      <a\\n        href=\\\"https://github.com/jtmozley/clickygame\\\"\\n        target=\\\"_blank\\\"\\n        rel=\\\"noopener noreferrer\\\"\\n      >\\n        <i className=\\\"fab fa-github\\\" />Repo\\n      </a>\\n    </div>\\n  );\\n}\\n\",\"import React, { Component } from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport Nav from \\\"./components/topbar/index.js\\\";\\nimport Jumbotron from \\\"./components/jumbotron/index.js\\\";\\nimport friends from \\\"./friends.json\\\";\\nimport Container from \\\"./components/cardcontainer/index.js\\\";\\nimport Card from \\\"./components/imagecard/index.js\\\";\\nimport Footer from \\\"./components/footer/index.js\\\";\\n\\nclass App extends Component {\\n  state = {\\n    friends,\\n    selectedImages: [],\\n    msg: \\\"Click an Image to Begin\\\",\\n    score: 0,\\n    topScore: 0\\n  };\\n\\n  //findFriend function called on click of an image\\n  findFriend = id => {\\n    //find id duplicates in selectedImages array and return truthy or falsy\\n    const idCheck = this.state.selectedImages.find(myId => myId === id);\\n    //add id of user selected image to array\\n    this.state.selectedImages.push(id);\\n    //shuffle images\\n    this.shuffleImages(this.state.friends);\\n    //update top score if needed\\n    if (this.state.score > this.state.topScore) {\\n      this.setState({\\n        topScore: this.state.score\\n      });\\n    }\\n    //evaluate if the image has been previously selected\\n    if (idCheck) {\\n      this.setState({\\n        score: 0,\\n        msg: \\\"You Lose\\\",\\n        selectedImages: []\\n      });\\n      setTimeout(() => this.setState({msg: \\\"Click an Image to Begin\\\"}), 1000)\\n    } else {\\n      this.setState({\\n        score: this.state.score + 1,\\n        msg: \\\"Select Another Image\\\"\\n      });\\n    }\\n  };\\n  //function for shuffling images for user display\\n  shuffleImages = array => {\\n    for (let i = array.length - 1; i > 0; i--) {\\n      const j = Math.floor(Math.random() * (i + 1));\\n      [array[i], array[j]] = [array[j], array[i]];\\n    }\\n  };\\n  //rendering all components to display\\n  render() {\\n    return (\\n      <div>\\n        <Nav\\n          score={this.state.score}\\n          topScore={this.state.topScore}\\n          message={this.state.msg}\\n        />\\n        <Jumbotron />\\n        <Container>\\n          {this.state.friends.map(friend => (\\n            <Card\\n              key={friend.id}\\n              id={friend.id}\\n              image={friend.image}\\n              findFriend={this.findFriend}\\n            />\\n          ))}\\n        </Container>\\n        <Footer />\\n      </div>\\n    );\\n  }\\n}\\nexport default App;\\n\\n//  // Filter this.state.friends for friends with an id not equal to the id being removed\\n//  console.log(\\\"click worked\\\");\\n//  const myFriend = this.state.tempFriend.find(myId => myId.id === id);\\n\\n//  //if we havea copy check if score is high score and restart game\\n//  //if the id is not found that means we arealdy pulled it out of the tempFriends list\\n//  if (myFriend === undefined) {\\n//    this.setState({\\n//      //update state to game over\\n//      //check top score\\n//      //if topscore<score then topscore:this.state.score\\n//      score: 0,\\n//      msg: \\\"Game Over!\\\",\\n//      tempFriend: this.state.friends\\n//    });\\n//  } else {\\n//    //if there are no new matches go ahead and update the scores msgs,\\n//    //then we need to score the value to check the current list of friends to the oldlist\\n//    const oldListoffriends = this.state.tempFriend.filter(\\n//      myId => myId.id !== id\\n//    );\\n//    this.setState({\\n//      msg: \\\"\\\",\\n//      score: this.state.score + 1,\\n//      friends: this.state.friends,\\n//      tempFriend: oldListoffriends\\n//    });\\n//    //update the state of tempFriend:oldListoffriends\\n//  }\\n\\n//  const friends = this.state.friends.filter(friend => friend.id !== id);\\n//  // Set this.state.friends equal to the new friends array\\n//  this.setState({ friends });\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App.js';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(e){e.exports=[{id:1,image:\"https://vignette.wikia.nocookie.net/spongebobgalaxy/images/0/07/SpongeBob_SquarePants.png/revision/latest?cb=20171228024014\"},{id:2,image:\"https://vignette3.wikia.nocookie.net/vsbattles/images/8/80/Mr._Krabs.png/revision/latest?cb=20150919162131\"},{id:3,image:\"https://vignette2.wikia.nocookie.net/fictionalcharacters/images/a/ac/Squidward.png/revision/latest?cb=20131121012626\"},{id:4,image:\"https://s-media-cache-ak0.pinimg.com/originals/fe/32/49/fe32495d45283cd6860ae122f0aeaad9.png\"},{id:5,image:\"https://vignette4.wikia.nocookie.net/vsbattles/images/3/39/Courage-0.png/revision/latest?cb=20160719055423\"},{id:6,image:\"https://vignette1.wikia.nocookie.net/doug/images/3/3b/Doug001.gif/revision/latest?cb=20110807170511\"},{id:7,image:\"https://vignette2.wikia.nocookie.net/deathbattlefanon/images/2/2b/Bugs_Bunny.png/revision/latest?cb=20151206010607\"},{id:8,image:\"http://vignette3.wikia.nocookie.net/p__/images/9/9a/Johnny_Bravo.png/revision/latest?cb=20131031233339&path-prefix=protagonist\"},{id:9,image:\"https://vignette4.wikia.nocookie.net/uncyclopedia/images/e/e4/Tommy_Pickles.png/revision/latest?cb=20110530102641\"},{id:10,image:\"http://vignette3.wikia.nocookie.net/rockosmodernlife/images/9/9e/Rockos-modern-life-4e582a8f06a41.png/revision/latest?cb=20130522173416\"},{id:11,image:\"http://vignette2.wikia.nocookie.net/dragon-rap-battles/images/b/b6/Captain_Planet.png/revision/latest?cb=20160911200836\"},{id:12,image:\"http://static.tvtropes.org/pmwiki/pub/images/ickis.png\"}]},,,function(e,t,a){e.exports=a(22)},,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),o=a(2),s=a.n(o),r=(a(15),a(3)),c=a(4),m=a(7),l=a(5),g=a(8);a(16),a(17);function d(e){return i.a.createElement(\"div\",{className:\"bar fixed-top\"},i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(\"div\",{className:\"col-sm text-center item\"},\"Clicky Game\"),i.a.createElement(\"div\",{className:\"col-sm text-center item message\"},e.message),i.a.createElement(\"div\",{className:\"col-sm text-center item\"},\"Score: \",e.score,\" | Top Score: \",e.topScore)))}a(18);function u(){return i.a.createElement(\"div\",{className:\"jumbotron jumbotron-fluid\"},i.a.createElement(\"div\",{className:\"container\"},i.a.createElement(\"p\",{className:\"lead text-center\"},\"If you click an image more than once the game will start over and the score will be reset to zero\")))}var f=a(6);a(19);function p(e){return i.a.createElement(\"div\",{className:\"container\"},i.a.createElement(\"div\",{className:\"row justify-content-center\"},e.children))}a(20);function v(e){return i.a.createElement(\"img\",{onClick:function(){return e.findFriend(e.id)},className:\"image col-md\",src:e.image,alt:e.id})}a(21);function h(){return i.a.createElement(\"div\",{className:\"footer\"},i.a.createElement(\"i\",{className:\"fab fa-react\"}),i.a.createElement(\"i\",{className:\"fab fa-bootstrap\"}),i.a.createElement(\"a\",{href:\"https://github.com/jtmozley/clickygame\",target:\"_blank\",rel:\"noopener noreferrer\"},i.a.createElement(\"i\",{className:\"fab fa-github\"}),\"Repo\"))}var b=function(e){function t(){var e,a;Object(r.a)(this,t);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(a=Object(m.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(i)))).state={friends:f,selectedImages:[],msg:\"Click an Image to Begin\",score:0,topScore:0},a.findFriend=function(e){var t=a.state.selectedImages.find(function(t){return t===e});a.state.selectedImages.push(e),a.shuffleImages(a.state.friends),a.state.score>a.state.topScore&&a.setState({topScore:a.state.score}),t?(a.setState({score:0,msg:\"You Lose\",selectedImages:[]}),setTimeout(function(){return a.setState({msg:\"Click an Image to Begin\"})},1e3)):a.setState({score:a.state.score+1,msg:\"Select Another Image\"})},a.shuffleImages=function(e){for(var t=e.length-1;t>0;t--){var a=Math.floor(Math.random()*(t+1)),n=[e[a],e[t]];e[t]=n[0],e[a]=n[1]}},a}return Object(g.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",null,i.a.createElement(d,{score:this.state.score,topScore:this.state.topScore,message:this.state.msg}),i.a.createElement(u,null),i.a.createElement(p,null,this.state.friends.map(function(t){return i.a.createElement(v,{key:t.id,id:t.id,image:t.image,findFriend:e.findFriend})})),i.a.createElement(h,null))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(i.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[9,1,2]]]);","extractedComments":[]}