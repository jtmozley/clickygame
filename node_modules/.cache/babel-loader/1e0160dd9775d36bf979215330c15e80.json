{"ast":null,"code":"var _jsxFileName = \"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/topbar/index.js\";\nimport Jumbotron from \"./components/jumbotron/index.js\";\nimport friends from \"./friends.json\";\nimport Container from \"./components/cardcontainer/index.js\";\nimport Card from \"./components/imagecard/index.js\";\nimport Footer from \"./components/footer/index.js\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      tempFriend: friends,\n      //everything but zero, 1\n      msg: \"Click an Image to Begin\",\n      score: 0,\n      topscore: 0\n    };\n\n    this.findFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const myFriend = this.state.tempFriend.find(myId => myId.id == id); //if we havea copy check if score is high score and restart game\n      //if the id is not found that means we arealdy pulled it out of the tempFriends list\n\n      if (myFriend == undefined) {\n        this.setState({\n          //update state to game over\n          //check top score\n          //if topscore<score then topscore:this.state.score\n          score: 0,\n          msg: \"Game Over!\",\n          tempFriend: friends\n        });\n      } else {\n        //if there are no new matches go ahead and update the scores msgs, \n        //then we need to score the value to check the current list of friends to the oldlist\n        const oldListoffriends = this.state.tempFriend.filter(myId => myId.id != id);\n        this.setState({\n          msg: \"keep on going\",\n          score: score + 1,\n          friends: friends,\n          tempFriend: oldListoffriends\n        }); //update the state of tempFriend:oldListoffriends\n      }\n\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n\n    this.shuffleFriends = array => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      topScore: this.state.topscore,\n      message: this.state.msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(Card, {\n      key: friend.id,\n      id: friend.id,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/App.js"],"names":["React","Component","Nav","Jumbotron","friends","Container","Card","Footer","App","state","tempFriend","msg","score","topscore","findFriend","id","myFriend","find","myId","undefined","setState","oldListoffriends","filter","friend","shuffleFriends","array","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNL,MAAAA,OADM;AAENM,MAAAA,UAAU,EAACN,OAFL;AAEc;AACpBO,MAAAA,GAAG,EAAE,yBAHC;AAINC,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KAFkB;;AAAA,SAc1BC,UAd0B,GAcbC,EAAE,IAAI;AACjB;AAEA,YAAMC,QAAQ,GAAE,KAAKP,KAAL,CAAWC,UAAX,CAAsBO,IAAtB,CAA2BC,IAAI,IAAGA,IAAI,CAACH,EAAL,IAAUA,EAA5C,CAAhB,CAHiB,CAKjB;AACA;;AACA,UAAGC,QAAQ,IAAGG,SAAd,EACA;AACE,aAAKC,QAAL,CAAc;AACZ;AACA;AACA;AACAR,UAAAA,KAAK,EAAC,CAJM;AAKZD,UAAAA,GAAG,EAAC,YALQ;AAMZD,UAAAA,UAAU,EAACN;AANC,SAAd;AAUD,OAZD,MAaI;AACF;AACA;AACA,cAAMiB,gBAAgB,GAAE,KAAKZ,KAAL,CAAWC,UAAX,CAAsBY,MAAtB,CAA6BJ,IAAI,IAAGA,IAAI,CAACH,EAAL,IAAUA,EAA9C,CAAxB;AACA,aAAKK,QAAL,CACE;AACET,UAAAA,GAAG,EAAE,eADP;AAEEC,UAAAA,KAAK,EAACA,KAAK,GAAC,CAFd;AAGER,UAAAA,OAAO,EAACA,OAHV;AAIEM,UAAAA,UAAU,EAACW;AAJb,SADF,EAJE,CAYF;AAED;;AAED,YAAMjB,OAAO,GAAG,KAAKK,KAAL,CAAWL,OAAX,CAAmBkB,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACR,EAAP,KAAcA,EAAlD,CAAhB,CApCiB,CAqCjB;;AACA,WAAKK,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACD,KArDyB;;AAAA,SAwD5BoB,cAxD4B,GAwDXC,KAAK,IACtB,CAEC,CA3D2B;AAAA;;AAiE1BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,KAAvB;AAA8B,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAAnD;AAA6D,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWE,GAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWL,OAAX,CAAmBuB,GAAnB,CAAuBJ,MAAM,IAC5B,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,MAAM,CAACR,EAAlB;AAAsB,MAAA,EAAE,EAAEQ,MAAM,CAACR,EAAjC;AAAqC,MAAA,KAAK,EAAEQ,MAAM,CAACK,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAHF,EAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AA9EyB;;AAgF5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/topbar/index.js\";\nimport Jumbotron from \"./components/jumbotron/index.js\";\nimport friends from \"./friends.json\";\nimport Container from \"./components/cardcontainer/index.js\";\nimport Card from \"./components/imagecard/index.js\";\nimport Footer from \"./components/footer/index.js\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    tempFriend:friends, //everything but zero, 1\n    msg: \"Click an Image to Begin\",\n    score: 0,\n    topscore: 0\n    \n  };\n\n  \n\n\n  findFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n\n    const myFriend= this.state.tempFriend.find(myId =>myId.id ==id);\n\n    //if we havea copy check if score is high score and restart game\n    //if the id is not found that means we arealdy pulled it out of the tempFriends list\n    if(myFriend== undefined)\n    {\n      this.setState({\n        //update state to game over\n        //check top score\n        //if topscore<score then topscore:this.state.score\n        score:0,\n        msg:\"Game Over!\",\n        tempFriend:friends\n\n  \n      })\n    }\n    else{\n      //if there are no new matches go ahead and update the scores msgs, \n      //then we need to score the value to check the current list of friends to the oldlist\n      const oldListoffriends =this.state.tempFriend.filter(myId =>myId.id !=id);\n      this.setState(\n        {\n          msg: \"keep on going\",\n          score:score+1,\n          friends:friends,\n          tempFriend:oldListoffriends\n        }\n      )\n      //update the state of tempFriend:oldListoffriends\n\n    }\n\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n//you will need a shuffle fx\n\nshuffleFriends = array =>\n{\n\n}\n\n\n\n\n  \n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topscore} message={this.state.msg}/>\n        <Jumbotron />\n        <Container>\n          {this.state.friends.map(friend => (\n            <Card key={friend.id} id={friend.id} image={friend.image} />\n          ))}\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}