{"ast":null,"code":"var _jsxFileName = \"/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/topbar/index.js\";\nimport Jumbotron from \"./components/jumbotron/index.js\";\nimport friends from \"./friends.json\";\nimport Container from \"./components/cardcontainer/index.js\";\nimport Card from \"./components/imagecard/index.js\";\nimport Footer from \"./components/footer/index.js\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      tempFriend: friends,\n      //everything but zero, 1\n      msg: \"Click an Image to Begin\",\n      score: 0,\n      topscore: 0\n    };\n\n    this.findFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const myFriend = this.state.tempFriend.find(myId => myId.id === id); //if we havea copy check if score is high score and restart game\n      //if the id is not found that means we arealdy pulled it out of the tempFriends list\n\n      if (myFriend === undefined) {\n        this.setState({\n          //update state to game over\n          //check top score\n          //if topscore<score then topscore:this.state.score\n          score: 0,\n          msg: \"Game Over!\",\n          tempFriend: friends\n        });\n      } else {\n        //if there are no new matches go ahead and update the scores msgs,\n        //then we need to score the value to check the current list of friends to the oldlist\n        const oldListoffriends = this.state.tempFriend.filter(myId => myId.id != id);\n        this.setState({\n          msg: \"keep on going\",\n          score: +1,\n          friends: friends,\n          tempFriend: oldListoffriends\n        }); //update the state of tempFriend:oldListoffriends\n      }\n\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n\n    this.shuffleFriends = array => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      topScore: this.state.topscore,\n      message: this.state.msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(Card, {\n      key: friend.id,\n      id: friend.id,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinmozley/Desktop/UT_Coding_Camp/clickygame/src/App.js"],"names":["React","Component","Nav","Jumbotron","friends","Container","Card","Footer","App","state","tempFriend","msg","score","topscore","findFriend","id","myFriend","find","myId","undefined","setState","oldListoffriends","filter","friend","shuffleFriends","array","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNL,MAAAA,OADM;AAENM,MAAAA,UAAU,EAAEN,OAFN;AAEe;AACrBO,MAAAA,GAAG,EAAE,yBAHC;AAINC,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KAFkB;;AAAA,SAU1BC,UAV0B,GAUbC,EAAE,IAAI;AACjB;AAEA,YAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWC,UAAX,CAAsBO,IAAtB,CAA2BC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA/C,CAAjB,CAHiB,CAKjB;AACA;;AACA,UAAIC,QAAQ,KAAKG,SAAjB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AACZ;AACA;AACA;AACAR,UAAAA,KAAK,EAAE,CAJK;AAKZD,UAAAA,GAAG,EAAE,YALO;AAMZD,UAAAA,UAAU,EAAEN;AANA,SAAd;AAQD,OATD,MASO;AACL;AACA;AACA,cAAMiB,gBAAgB,GAAG,KAAKZ,KAAL,CAAWC,UAAX,CAAsBY,MAAtB,CACvBJ,IAAI,IAAIA,IAAI,CAACH,EAAL,IAAWA,EADI,CAAzB;AAGA,aAAKK,QAAL,CAAc;AACZT,UAAAA,GAAG,EAAE,eADO;AAEZC,UAAAA,KAAK,EAAG,CAAE,CAFE;AAGZR,UAAAA,OAAO,EAAEA,OAHG;AAIZM,UAAAA,UAAU,EAAEW;AAJA,SAAd,EANK,CAYL;AACD;;AAED,YAAMjB,OAAO,GAAG,KAAKK,KAAL,CAAWL,OAAX,CAAmBkB,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACR,EAAP,KAAcA,EAAlD,CAAhB,CA/BiB,CAgCjB;;AACA,WAAKK,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACD,KA5CyB;;AAAA,SA+C1BoB,cA/C0B,GA+CTC,KAAK,IAAI,CAAE,CA/CF;AAAA;;AAiD1BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AACE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAFvB;AAGE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWE,GAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWL,OAAX,CAAmBuB,GAAnB,CAAuBJ,MAAM,IAC5B,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,MAAM,CAACR,EAAlB;AAAsB,MAAA,EAAE,EAAEQ,MAAM,CAACR,EAAjC;AAAqC,MAAA,KAAK,EAAEQ,MAAM,CAACK,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAPF,EAYE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAgBD;;AAlEyB;;AAoE5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/topbar/index.js\";\nimport Jumbotron from \"./components/jumbotron/index.js\";\nimport friends from \"./friends.json\";\nimport Container from \"./components/cardcontainer/index.js\";\nimport Card from \"./components/imagecard/index.js\";\nimport Footer from \"./components/footer/index.js\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    tempFriend: friends, //everything but zero, 1\n    msg: \"Click an Image to Begin\",\n    score: 0,\n    topscore: 0\n  };\n\n  findFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n\n    const myFriend = this.state.tempFriend.find(myId => myId.id === id);\n\n    //if we havea copy check if score is high score and restart game\n    //if the id is not found that means we arealdy pulled it out of the tempFriends list\n    if (myFriend === undefined) {\n      this.setState({\n        //update state to game over\n        //check top score\n        //if topscore<score then topscore:this.state.score\n        score: 0,\n        msg: \"Game Over!\",\n        tempFriend: friends\n      });\n    } else {\n      //if there are no new matches go ahead and update the scores msgs,\n      //then we need to score the value to check the current list of friends to the oldlist\n      const oldListoffriends = this.state.tempFriend.filter(\n        myId => myId.id != id\n      );\n      this.setState({\n        msg: \"keep on going\",\n        score:  + 1,\n        friends: friends,\n        tempFriend: oldListoffriends\n      });\n      //update the state of tempFriend:oldListoffriends\n    }\n\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n  //you will need a shuffle fx\n\n  shuffleFriends = array => {};\n\n  render() {\n    return (\n      <div>\n        <Nav\n          score={this.state.score}\n          topScore={this.state.topscore}\n          message={this.state.msg}\n        />\n        <Jumbotron />\n        <Container>\n          {this.state.friends.map(friend => (\n            <Card key={friend.id} id={friend.id} image={friend.image} />\n          ))}\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}